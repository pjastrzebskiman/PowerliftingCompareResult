// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PowerliftingCompareResult.Models;

#nullable disable

namespace PowerliftingCompareResult.Migrations
{
    [DbContext(typeof(ResultContext))]
    partial class ResultContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PowerliftingCompareResult.Models.LiftResult", b =>
                {
                    b.Property<float?>("Age")
                        .HasColumnType("real");

                    b.Property<string>("AgeClass")
                        .HasColumnType("text");

                    b.Property<float?>("Bench")
                        .HasColumnType("real");

                    b.Property<float?>("Bench1")
                        .HasColumnType("real");

                    b.Property<float?>("Bench2")
                        .HasColumnType("real");

                    b.Property<float?>("Bench3")
                        .HasColumnType("real");

                    b.Property<float?>("BodyWeight")
                        .HasColumnType("real");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<float?>("Deadlift")
                        .HasColumnType("real");

                    b.Property<float?>("Deadlift1")
                        .HasColumnType("real");

                    b.Property<float?>("Deadlift2")
                        .HasColumnType("real");

                    b.Property<float?>("Deadlift3")
                        .HasColumnType("real");

                    b.Property<string>("EQ")
                        .HasColumnType("text");

                    b.Property<string>("Federation")
                        .HasColumnType("text");

                    b.Property<string>("MeetCountry")
                        .HasColumnType("text");

                    b.Property<string>("MeetName")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Sex")
                        .HasColumnType("text");

                    b.Property<float?>("Squat")
                        .HasColumnType("real");

                    b.Property<float?>("Squat1")
                        .HasColumnType("real");

                    b.Property<float?>("Squat2")
                        .HasColumnType("real");

                    b.Property<float?>("Squat3")
                        .HasColumnType("real");

                    b.Property<float?>("Total")
                        .HasColumnType("real");

                    b.Property<string>("WeightClass")
                        .HasColumnType("text");

                    b.ToTable("LiftResults");
                });
#pragma warning restore 612, 618
        }
    }
}
